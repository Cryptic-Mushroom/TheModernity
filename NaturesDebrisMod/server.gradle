/*
 * Copyright (c) 2020 RedGalaxy & contributors
 * All rights reserved. Do not distribute.
 *
 * For a full license, see LICENSE.txt
 */

task serverJar(type: Jar) {
    from "${project.buildDir}/classes/java/main"
    from "${project.buildDir}/resources/main"
    from configurations.embed.collect { it.isDirectory() ? it : zipTree( it ) }

    manifest {
        attributes( [
            "Specification-Title"     : "Nature's Debris",
            "Specification-Vendor"    : "Shadew",
            "Specification-Version"   : "${ version }",
            "Implementation-Title"    : project.ext.implName,
            "Implementation-Version"  : "${ version }",
            "Implementation-Vendor"   : "Shadew",
            "Implementation-Timestamp": new Date().format( "yyyy-MM-dd'T'HH:mm:ssZ" ),
            "MixinConnector"          : "natures.debris.core.MixinConnector"
        ] )
    }

    appendix = "server"

    exclude( "natures/debris/client/**" )
    exclude( "natures/debris/data/**" )
    exclude( "natures/debris/dev/**" )
    exclude( "assets/**" )
}


task signServerJar( dependsOn: 'reobfServerJar' ) {
    doLast {
        project.ext.sign( serverJar.archivePath )
    }
}

def reobfServerJar = project.reobf.create('serverJar')
reobfServerJar.dependsOn('createMcpToSrg')
reobfServerJar.setMappings(tasks.createMcpToSrg.getOutput())

project.shade.create("serverJar")
