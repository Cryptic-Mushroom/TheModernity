/*
 * Copyright (c) 2020 RedGalaxy & contributors
 * All rights reserved. Do not distribute.
 *
 * For a full license, see LICENSE.txt
 */

task generateSources( type: Copy ) {
    doFirst {
        delete "$buildDir/generatedSrc"
    }
    outputs.upToDateWhen { false }

    from( 'src/main/java' ) {
        exclude 'runs/**'
    }
    into "$buildDir/generatedSrc"
    filter { line ->
        line.replaceAll( 'DynamicConstants\\.IDE', "$project.isIDE" )
            .replaceAll( 'DynamicConstants\\.SIGNED', "${ project.canJarBeSigned() && !project.isIDE }" )
            .replaceAll( 'DynamicConstants\\.VERSION_NAME', "\"${ project.version }\"" )
            .replaceAll( 'DynamicConstants\\.VERSION', "\"${ project.version }\"" )
            .replaceAll( 'DynamicConstants\\.SHA1', "\"${ project.isIDE ? "NO:FI:NG:ER:PR:IN:TA:VA:IL:AB:LE" : project.getProjectFingerprint() }\"" )
    }
    doLast {
        println "Generated sources, IDE: $project.isIDE"
    }
}

processResources {
    doFirst {
        delete "$buildDir/resources" // Delete resources to fully clean up unused items
    }
    // Import png and ogg apart from other files as we don't want lines to be
    // replaced in such files...
    from( 'src/main/resources' ) {
        exclude '**/*.png'
        exclude '**/*.ogg'
        filter { line ->
            line.replaceAll( '\\$\\{version\\}', "$project.version" )
                .replaceAll( '\\$\\{verName\\}', "$project.versionName" )
        }
    }
    from( 'src/main/resources' ) {
        include '**/*.png'
        include '**/*.ogg'
    }

    exclude '**/unused/**'
    exclude 'src/main/resources/templates/**'
}

compileJava {
    setSource( "$buildDir/generatedSrc" )
    dependsOn generateSources
}